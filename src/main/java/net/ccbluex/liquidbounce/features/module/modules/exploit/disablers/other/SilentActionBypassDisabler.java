
package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.other;

import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode;
import net.ccbluex.liquidbounce.value.BoolValue;
import net.minecraft.network.play.client.C0BPacketEntityAction;

public final class SilentActionBypassDisabler extends DisablerMode {

    public SilentActionBypassDisabler() {
        super("Silent Sprint/Sneak");
    }
    private final BoolValue startSprint = new BoolValue("Start sprinting", true);
    private final BoolValue stopSprinting = new BoolValue("Stop sprinting", true);
    private final BoolValue startSneaking = new BoolValue("Start sneaking", true);
    private final BoolValue stopSneaking = new BoolValue("Stop sneaking", true);
    @Override
    public void onPacket(final PacketEvent event) {
        if (event.getPacket() instanceof C0BPacketEntityAction) {
            switch (((C0BPacketEntityAction) event.getPacket()).getAction()) {
                case START_SPRINTING:
                    if (startSprint.equals("start sprinting")) {
                        getDisabler().debugMessage("Cancelled start sprinting packet.");
                        event.cancelEvent();
                    }
                    break;
                case STOP_SPRINTING:
                    if (stopSprinting.equals("stop sprinting")) {
                            getDisabler().debugMessage("Cancelled stop sprinting packet.");
                        event.cancelEvent();
                    }
                    break;
                case START_SNEAKING:
                    if (startSneaking.equals("start sneaking")) {
                        getDisabler().debugMessage("Cancelled start sneaking packet.");
                        event.cancelEvent();
                    }
                    break;
                case STOP_SNEAKING:
                    if (stopSneaking.equals("stop sneaking")) {
                        getDisabler().debugMessage("Cancelled stop sneaking packet.");
                        event.cancelEvent();
                    }
                    break;
            }
        }
    }
}